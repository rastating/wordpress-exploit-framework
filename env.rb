wpxfbase = __FILE__
while File.symlink?(wpxfbase)
  wpxfbase = File.expand_path(File.readlink(wpxfbase), File.dirname(wpxfbase))
end

app_path = File.expand_path(File.join(File.dirname(wpxfbase)))
$: << app_path
$: << 'lib'
$: << 'modules'

require 'colorize'
require 'date'
require 'json'
require 'require_all'
require 'time'
require 'typhoeus'
require 'zip'

# Monkey patching the String class for Camelize 
class String
  def camelize
    self.split('_').map {|w| w.capitalize}.join
  end
end

# Initializing all the modules
module Cli
  Dir[File.join(File.dirname(__FILE__),  'lib/cli', '*.rb')].each do |f|
    autoload File.basename(f, '.rb').camelize.to_sym, f
  end
end

require File.expand_path(File.dirname(__FILE__) + '/lib/wpxf/core')
require File.expand_path(File.dirname(__FILE__) + '/modules/modules')
require File.expand_path(File.dirname(__FILE__) + '/payloads/payloads')
require File.expand_path(File.dirname(__FILE__)  + '/github_updater')

module Wpxf
  def self.data_directory=(val)
    @@data_directory = val
  end

  def self.data_directory
    @@data_directory
  end

  def self.app_path=(val)
    @@app_path = val
  end

  def self.app_path
    @@app_path
  end

  def self.change_stdout_sync(enabled)
    original_setting = STDOUT.sync
    STDOUT.sync = true
    yield(enabled)
    STDOUT.sync = original_setting
  end
end

Wpxf.app_path = app_path
Wpxf.data_directory = File.join(app_path, 'data/')
